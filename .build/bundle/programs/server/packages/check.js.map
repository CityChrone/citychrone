{"version":3,"sources":["meteor://ðŸ’»app/packages/check/match.js","meteor://ðŸ’»app/packages/check/isPlainObject.js"],"names":["module","export","check","Match","currentArgumentChecker","Meteor","EnvironmentVariable","isPlainObject","require","hasOwn","Object","prototype","hasOwnProperty","value","pattern","argChecker","getOrNullIfOutsideFiber","checking","result","testSubtree","err","Error","message","path","Optional","Maybe","OneOf","args","Any","Where","condition","ObjectIncluding","ObjectWithValues","Integer","makeErrorType","msg","sanitizedError","test","_failIfArgumentsAreNotAllChecked","f","context","description","ArgumentChecker","withValue","apply","throwUnlessAllArgumentsHaveBeenChecked","constructor","choices","length","stringForErrorMessage","options","onlyShowType","EJSON","stringify","JSON","stringifyError","name","typeofChecks","String","Number","Boolean","Function","undefined","i","Array","isArray","isArguments","_prependPath","unknownKeysAllowed","unknownKeyPattern","requiredPatterns","optionalPatterns","keys","forEach","key","subPattern","subValue","call","reverse","_checkingOneValue","bind","isNaN","splice","_jsKeywords","base","match","indexOf","isObject","baseIsArguments","item","toString","arguments","callee","class2type","fnToString","ObjectFunctionString","getProto","getPrototypeOf","exports","obj","proto","Ctor"],"mappings":"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","file":"/packages/check.js","sourcesContent":["// XXX docs\n\n// Things we explicitly do NOT support:\n//    - heterogenous arrays\n\nvar currentArgumentChecker = new Meteor.EnvironmentVariable;\nvar isPlainObject = require(\"./isPlainObject.js\").isPlainObject;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\n/**\n * @summary Check that a value matches a [pattern](#matchpatterns).\n * If the value does not match the pattern, throw a `Match.Error`.\n *\n * Particularly useful to assert that arguments to a function have the right\n * types and structure.\n * @locus Anywhere\n * @param {Any} value The value to check\n * @param {MatchPattern} pattern The pattern to match\n * `value` against\n */\nexport const check = function (value, pattern) {\n  // Record that check got called, if somebody cared.\n  //\n  // We use getOrNullIfOutsideFiber so that it's OK to call check()\n  // from non-Fiber server contexts; the downside is that if you forget to\n  // bindEnvironment on some random callback in your method/publisher,\n  // it might not find the argumentChecker and you'll get an error about\n  // not checking an argument that it looks like you're checking (instead\n  // of just getting a \"Node code must run in a Fiber\" error).\n  var argChecker = currentArgumentChecker.getOrNullIfOutsideFiber();\n  if (argChecker)\n    argChecker.checking(value);\n  var result = testSubtree(value, pattern);\n  if (result) {\n    var err = new Match.Error(result.message);\n    if (result.path) {\n      err.message += \" in field \" + result.path;\n      err.path = result.path;\n    }\n    throw err;\n  }\n};\n\n/**\n * @namespace Match\n * @summary The namespace for all Match types and methods.\n */\nexport const Match = {\n  Optional: function (pattern) {\n    return new Optional(pattern);\n  },\n  Maybe: function (pattern) {\n    return new Maybe(pattern);\n  },\n  OneOf: function (...args) {\n    return new OneOf(args);\n  },\n  Any: ['__any__'],\n  Where: function (condition) {\n    return new Where(condition);\n  },\n  ObjectIncluding: function (pattern) {\n    return new ObjectIncluding(pattern);\n  },\n  ObjectWithValues: function (pattern) {\n    return new ObjectWithValues(pattern);\n  },\n  // Matches only signed 32-bit integers\n  Integer: ['__integer__'],\n\n  // XXX matchers should know how to describe themselves for errors\n  Error: Meteor.makeErrorType(\"Match.Error\", function (msg) {\n    this.message = \"Match error: \" + msg;\n    // The path of the value that failed to match. Initially empty, this gets\n    // populated by catching and rethrowing the exception as it goes back up the\n    // stack.\n    // E.g.: \"vals[3].entity.created\"\n    this.path = \"\";\n    // If this gets sent over DDP, don't give full internal details but at least\n    // provide something better than 500 Internal server error.\n    this.sanitizedError = new Meteor.Error(400, \"Match failed\");\n  }),\n\n  // Tests to see if value matches pattern. Unlike check, it merely returns true\n  // or false (unless an error other than Match.Error was thrown). It does not\n  // interact with _failIfArgumentsAreNotAllChecked.\n  // XXX maybe also implement a Match.match which returns more information about\n  //     failures but without using exception handling or doing what check()\n  //     does with _failIfArgumentsAreNotAllChecked and Meteor.Error conversion\n\n  /**\n   * @summary Returns true if the value matches the pattern.\n   * @locus Anywhere\n   * @param {Any} value The value to check\n   * @param {MatchPattern} pattern The pattern to match `value` against\n   */\n  test(value, pattern) {\n    return !testSubtree(value, pattern);\n  },\n\n  // Runs `f.apply(context, args)`. If check() is not called on every element of\n  // `args` (either directly or in the first level of an array), throws an error\n  // (using `description` in the message).\n  //\n  _failIfArgumentsAreNotAllChecked(f, context, args, description) {\n    var argChecker = new ArgumentChecker(args, description);\n    var result = currentArgumentChecker.withValue(argChecker, function () {\n      return f.apply(context, args);\n    });\n    // If f didn't itself throw, make sure it checked all of its arguments.\n    argChecker.throwUnlessAllArgumentsHaveBeenChecked();\n    return result;\n  }\n};\n\nclass Optional {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n}\n\nclass Maybe {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n}\n\nclass OneOf {\n  constructor(choices) {\n    if (!choices || choices.length === 0)\n      throw new Error(\"Must provide at least one choice to Match.OneOf\");\n    this.choices = choices;\n  }\n}\n\nclass Where {\n  constructor(condition) {\n    this.condition = condition;\n  }\n}\n\nclass ObjectIncluding {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n}\n\nclass ObjectWithValues {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n}\n\nvar stringForErrorMessage = function (value, options) {\n  options = options || {};\n\n  if ( value === null ) return \"null\";\n\n  if ( options.onlyShowType ) {\n    return typeof value;\n  }\n\n  // Your average non-object things.  Saves from doing the try/catch below for.\n  if ( typeof value !== \"object\" ) {\n    return EJSON.stringify(value)\n  }\n\n  try {\n    // Find objects with circular references since EJSON doesn't support them yet (Issue #4778 + Unaccepted PR)\n    // If the native stringify is going to choke, EJSON.stringify is going to choke too.\n    JSON.stringify(value);\n  } catch (stringifyError) {\n    if ( stringifyError.name === \"TypeError\" ) {\n      return typeof value;\n    }\n  }\n\n  return EJSON.stringify(value);\n};\n\nvar typeofChecks = [\n  [String, \"string\"],\n  [Number, \"number\"],\n  [Boolean, \"boolean\"],\n  // While we don't allow undefined/function in EJSON, this is good for optional\n  // arguments with OneOf.\n  [Function, \"function\"],\n  [undefined, \"undefined\"]\n];\n\n// Return `false` if it matches. Otherwise, return an object with a `message` and a `path` field.\nvar testSubtree = function (value, pattern) {\n  // Match anything!\n  if (pattern === Match.Any)\n    return false;\n\n  // Basic atomic types.\n  // Do not match boxed objects (e.g. String, Boolean)\n  for (var i = 0; i < typeofChecks.length; ++i) {\n    if (pattern === typeofChecks[i][0]) {\n      if (typeof value === typeofChecks[i][1])\n        return false;\n      return {\n        message: \"Expected \" + typeofChecks[i][1] + \", got \" + stringForErrorMessage(value, { onlyShowType: true }),\n        path: \"\"\n      };\n    }\n  }\n\n  if (pattern === null) {\n    if (value === null) {\n      return false;\n    }\n    return {\n      message: \"Expected null, got \" + stringForErrorMessage(value),\n      path: \"\"\n    };\n  }\n\n  // Strings, numbers, and booleans match literally. Goes well with Match.OneOf.\n  if (typeof pattern === \"string\" || typeof pattern === \"number\" || typeof pattern === \"boolean\") {\n    if (value === pattern)\n      return false;\n    return {\n      message: \"Expected \" + pattern + \", got \" + stringForErrorMessage(value),\n      path: \"\"\n    };\n  }\n\n  // Match.Integer is special type encoded with array\n  if (pattern === Match.Integer) {\n    // There is no consistent and reliable way to check if variable is a 64-bit\n    // integer. One of the popular solutions is to get reminder of division by 1\n    // but this method fails on really large floats with big precision.\n    // E.g.: 1.348192308491824e+23 % 1 === 0 in V8\n    // Bitwise operators work consistantly but always cast variable to 32-bit\n    // signed integer according to JavaScript specs.\n    if (typeof value === \"number\" && (value | 0) === value)\n      return false;\n    return {\n      message: \"Expected Integer, got \" + stringForErrorMessage(value),\n      path: \"\"\n    };\n  }\n\n  // \"Object\" is shorthand for Match.ObjectIncluding({});\n  if (pattern === Object)\n    pattern = Match.ObjectIncluding({});\n\n  // Array (checked AFTER Any, which is implemented as an Array).\n  if (pattern instanceof Array) {\n    if (pattern.length !== 1) {\n      return {\n        message: \"Bad pattern: arrays must have one type element\" + stringForErrorMessage(pattern),\n        path: \"\"\n      };\n    }\n    if (!Array.isArray(value) && !isArguments(value)) {\n      return {\n        message: \"Expected array, got \" + stringForErrorMessage(value),\n        path: \"\"\n      };\n    }\n\n    for (var i = 0, length = value.length; i < length; i++) {\n      var result = testSubtree(value[i], pattern[0]);\n      if (result) {\n        result.path = _prependPath(i, result.path);\n        return result;\n      }\n    }\n    return false;\n  }\n\n  // Arbitrary validation checks. The condition can return false or throw a\n  // Match.Error (ie, it can internally use check()) to fail.\n  if (pattern instanceof Where) {\n    var result;\n    try {\n      result = pattern.condition(value);\n    } catch (err) {\n      if (!(err instanceof Match.Error))\n        throw err;\n      return {\n        message: err.message,\n        path: err.path\n      };\n    }\n    if (result)\n      return false;\n    // XXX this error is terrible\n    return {\n      message: \"Failed Match.Where validation\",\n      path: \"\"\n    };\n  }\n\n\n  if (pattern instanceof Maybe) {\n    pattern = Match.OneOf(undefined, null, pattern.pattern);\n  }\n  else if (pattern instanceof Optional) {\n    pattern = Match.OneOf(undefined, pattern.pattern);\n  }\n\n  if (pattern instanceof OneOf) {\n    for (var i = 0; i < pattern.choices.length; ++i) {\n      var result = testSubtree(value, pattern.choices[i]);\n      if (!result) {\n        // No error? Yay, return.\n        return false;\n      }\n      // Match errors just mean try another choice.\n    }\n    // XXX this error is terrible\n    return {\n      message: \"Failed Match.OneOf, Match.Maybe or Match.Optional validation\",\n      path: \"\"\n    };\n  }\n\n  // A function that isn't something we special-case is assumed to be a\n  // constructor.\n  if (pattern instanceof Function) {\n    if (value instanceof pattern)\n      return false;\n    return {\n      message: \"Expected \" + (pattern.name ||\"particular constructor\"),\n      path: \"\"\n    };\n  }\n\n  var unknownKeysAllowed = false;\n  var unknownKeyPattern;\n  if (pattern instanceof ObjectIncluding) {\n    unknownKeysAllowed = true;\n    pattern = pattern.pattern;\n  }\n  if (pattern instanceof ObjectWithValues) {\n    unknownKeysAllowed = true;\n    unknownKeyPattern = [pattern.pattern];\n    pattern = {};  // no required keys\n  }\n\n  if (typeof pattern !== \"object\") {\n    return {\n      message: \"Bad pattern: unknown pattern type\",\n      path: \"\"\n    };\n  }\n\n  // An object, with required and optional keys. Note that this does NOT do\n  // structural matches against objects of special types that happen to match\n  // the pattern: this really needs to be a plain old {Object}!\n  if (typeof value !== 'object') {\n    return {\n      message: \"Expected object, got \" + typeof value,\n      path: \"\"\n    };\n  }\n  if (value === null) {\n    return {\n      message: \"Expected object, got null\",\n      path: \"\"\n    };\n  }\n  if (! isPlainObject(value)) {\n    return {\n      message: \"Expected plain object\",\n      path: \"\"\n    };\n  }\n\n  var requiredPatterns = {};\n  var optionalPatterns = {};\n\n  Object.keys(pattern).forEach(key => {\n    const subPattern = pattern[key];\n    if (subPattern instanceof Optional ||\n        subPattern instanceof Maybe) {\n      optionalPatterns[key] = subPattern.pattern;\n    } else {\n      requiredPatterns[key] = subPattern;\n    }\n  });\n\n  for (var key in Object(value)) {\n    var subValue = value[key];\n    if (hasOwn.call(requiredPatterns, key)) {\n      var result = testSubtree(subValue, requiredPatterns[key]);\n      if (result) {\n        result.path = _prependPath(key, result.path);\n        return result;\n      }\n      delete requiredPatterns[key];\n    } else if (hasOwn.call(optionalPatterns, key)) {\n      var result = testSubtree(subValue, optionalPatterns[key]);\n      if (result) {\n        result.path = _prependPath(key, result.path);\n        return result;\n      }\n    } else {\n      if (!unknownKeysAllowed) {\n        return {\n          message: \"Unknown key\",\n          path: key\n        };\n      }\n      if (unknownKeyPattern) {\n        var result = testSubtree(subValue, unknownKeyPattern[0]);\n        if (result) {\n          result.path = _prependPath(key, result.path);\n          return result;\n        }\n      }\n    }\n  }\n\n  var keys = Object.keys(requiredPatterns);\n  if (keys.length) {\n    return {\n      message: \"Missing key '\" + keys[0] + \"'\",\n      path: \"\"\n    };\n  }\n};\n\nclass ArgumentChecker {\n  constructor (args, description) {\n    // Make a SHALLOW copy of the arguments. (We'll be doing identity checks\n    // against its contents.)\n    this.args = [...args];\n    // Since the common case will be to check arguments in order, and we splice\n    // out arguments when we check them, make it so we splice out from the end\n    // rather than the beginning.\n    this.args.reverse();\n    this.description = description;\n  }\n\n  checking(value) {\n    if (this._checkingOneValue(value))\n      return;\n    // Allow check(arguments, [String]) or check(arguments.slice(1), [String])\n    // or check([foo, bar], [String]) to count... but only if value wasn't\n    // itself an argument.\n    if (Array.isArray(value) || isArguments(value)) {\n      Array.prototype.forEach.call(value, this._checkingOneValue.bind(this));\n    }\n  }\n\n  _checkingOneValue(value) {\n    for (var i = 0; i < this.args.length; ++i) {\n      // Is this value one of the arguments? (This can have a false positive if\n      // the argument is an interned primitive, but it's still a good enough\n      // check.)\n      // (NaN is not === to itself, so we have to check specially.)\n      if (value === this.args[i] ||\n          (Number.isNaN(value) && Number.isNaN(this.args[i]))) {\n        this.args.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  throwUnlessAllArgumentsHaveBeenChecked() {\n    if (this.args.length > 0)\n      throw new Error(\"Did not check() all arguments during \" +\n                      this.description);\n  }\n}\n\nvar _jsKeywords = [\"do\", \"if\", \"in\", \"for\", \"let\", \"new\", \"try\", \"var\", \"case\",\n  \"else\", \"enum\", \"eval\", \"false\", \"null\", \"this\", \"true\", \"void\", \"with\",\n  \"break\", \"catch\", \"class\", \"const\", \"super\", \"throw\", \"while\", \"yield\",\n  \"delete\", \"export\", \"import\", \"public\", \"return\", \"static\", \"switch\",\n  \"typeof\", \"default\", \"extends\", \"finally\", \"package\", \"private\", \"continue\",\n  \"debugger\", \"function\", \"arguments\", \"interface\", \"protected\", \"implements\",\n  \"instanceof\"];\n\n// Assumes the base of path is already escaped properly\n// returns key + base\nfunction _prependPath(key, base) {\n  if ((typeof key) === \"number\" || key.match(/^[0-9]+$/)) {\n    key = \"[\" + key + \"]\";\n  } else if (!key.match(/^[a-z_$][0-9a-z_$]*$/i) ||\n             _jsKeywords.indexOf(key) >= 0) {\n    key = JSON.stringify([key]);\n  }\n\n  if (base && base[0] !== \"[\") {\n    return key + '.' + base;\n  }\n\n  return key + base;\n}\n\nfunction isObject(value) {\n  return typeof value === \"object\" && value !== null;\n}\n\nfunction baseIsArguments(item) {\n  return isObject(item) &&\n    Object.prototype.toString.call(item) === '[object Arguments]';\n}\n\nvar isArguments = baseIsArguments(function() {\n  return arguments;\n}()) ? baseIsArguments : function(value) {\n  return isObject(value) && typeof value.callee === \"function\";\n};\n","// Copy of jQuery.isPlainObject for the server side from jQuery v3.1.1.\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call(Object);\n\nvar getProto = Object.getPrototypeOf;\n\nexports.isPlainObject = function( obj ) {\n  var proto,\n    Ctor;\n\n  // Detect obvious negatives\n  // Use toString instead of jQuery.type to catch host objects\n  if (!obj || toString.call(obj) !== \"[object Object]\") {\n    return false;\n  }\n\n  proto = getProto(obj);\n\n  // Objects with no prototype (e.g., `Object.create( null )`) are plain\n  if (!proto) {\n    return true;\n  }\n\n  // Objects with prototype are plain iff they were constructed by a global Object function\n  Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\n  return typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString;\n};\n"]}