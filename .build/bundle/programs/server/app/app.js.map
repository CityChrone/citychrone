{"version":3,"sources":["meteor://ðŸ’»app/imports/lib/newScenarioLib/addNewLines.js","meteor://ðŸ’»app/imports/lib/newScenarioLib/addNewStops.js","meteor://ðŸ’»app/imports/lib/utils.js","meteor://ðŸ’»app/imports/server/startup/loadCitiesData.js","meteor://ðŸ’»app/imports/server/startup/scenarioDef.js","meteor://ðŸ’»app/imports/server/methods.js","meteor://ðŸ’»app/imports/server/router.js","meteor://ðŸ’»app/imports/DBs/scenarioDB.js","meteor://ðŸ’»app/imports/parameters.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","addNewLines","mergeSortedC","watch","require","v","timesOfDay","maxDuration","metroSpeeds","metroFrequencies","math","default","turf","computeTfor2Stops","dist","Vf","a","Ta","DISTa","sqrt","round","findSpeed","name","speed","topSpeed","findAccel","acceleration","findFreq","freq","frequency","metroLinesFetched","limT","dockTime","stopsLines","_","each","line","stops","forEach","stop","indexStop","lineName","point","latlng","pos","speedName","accel","frequencyName","points","push","cArrayTemp","freqTime","startingStopTime","endTime","startStopPoint","startStopPos","stop_i","length","endStopPoint","endStopPos","distance","timeDist","endingTime","cArray2Add","StartingTimeTemp","totStop","updateArraysWait","updateArrays","fill2AddArray","deleteEmptyItem","parameters","array2Add","key","num","i","computeNeigh","P2S2Add","S2S2Add","serverOSRM","Promise","resolve","reject","serverUrl","urlBase","coor","urlPoints","slice","urlStops","posStop","MaxDistance","maxDistanceWalk","NearSphere","$near","$geometry","$maxDistance","stopsNList","stopsFind","find","fields","sort","stopN","coordinates","pointsNList","pointsFind","pointN","getPoints","HTTP","get","error2","result2","console","log","error","resultPoints","data","durations","time","countPointAdded","pointN_i","maxTimeWalk","posPointN","timePointN","result","resultStops","stopN_i","posStopN","timeStopN","includes","posTemp","indexOf","city","stopsCollection","pointsCollections","scenario","remove","temp","lines","indexLine","size","insert","Date","getTime","newStops","promiseAddStop","count","all","then","values","copyArrayN","left","right","il","ir","concat","obj","map","arr","citiesData","listCities","addDataFromZip","loadCity","fs","JSZip","scenarioDB","computeScenario","meteorRoot","realpathSync","process","cwd","publicPath","path","nameFile","Meteor","settings","public","readFile","err","loadAsync","zip","file","async","data2","cityData","JSON","parse","split","pop","OSRM_SERVER","data3","p","newScenario","reverse","readdirSync","cutArrayC","computeScenarioDefault","addCityToList","EJSON","initScenario","computeScoreNewScenario","on","bind","worker","avgEmAll","arrays","i2","startTime","arrayC","indexEnd","indexStart","parseInt","arrayCCut","dataCity","startTimes","setTimeout","listPoints","arrayN","areaHex","stopsList","arrayPop","results","perLim","time_i","percentage","velocityScore","socialityScore","point_i","returned","ICSAPoint","toString","moments","moment","velocities","socialities","Object","keys","scenarioDef","Mongo","mergeArrays","methods","scenarioID","findOne","wTime","arrayC2Add","arrayNDef","mergeArrayN","P2SPos","P2STime","S2SPos","S2STime","P2PPos","P2PTime","pointsVenues","tPoint","dataToReturn","undefined","Router","checkCities","computeDataCity","computeOnlyScenarioDefault","route","params","response","end","where","Template","Collection","isServer","_ensureIndex","author","times","ObjectID","scores","popArray","totPop","reduce","b","vel","soc","update","id","_id","title","res","numModified","reactive","search","walkingVelocity","colorClass","startup","lodash","publish","scenarioList","field","listOfId"],"mappings":"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","file":"/app.js","sourcesContent":["import { mergeSortedC } from '/imports/lib/utils.js';\nimport { timesOfDay, maxDuration, metroSpeeds, metroFrequencies  } from '/imports/parameters.js';\nimport math from 'mathjs';\nimport turf from 'turf';\n\nfunction computeTfor2Stops(dist, Vf, a){//dist in meters\n\t// const Vf = 30; // max speed 100km/h\n\t// const a = 1.3; //acceleration 1.3 m/s^2\n\tconst Ta = Vf / a; //time needed to reach max velocity\n\tconst DISTa = 0.5 * a * Ta * Ta; //dist to reach the maximun velocity\n\n\tif(dist / 2.0 <= DISTa){\n\t\treturn 2 * math.sqrt(dist);\n\t}else{\n\t\t//console.log('TimeDist ', DISTa, math.sqrt(DISTa), (dist - 2. * DISTa) / Vf);\n\t\treturn math.round(2 * math.sqrt(DISTa) + (dist - 2.0 * DISTa) / Vf);\n\t}\n}\n\nfunction findSpeed(name) {\n\tfor (var speed of metroSpeeds) {\n\t\tif (speed.name == name)\n\t\t\treturn speed.topSpeed;\n\t}\n\treturn 30;\n}\n\nfunction findAccel(name) {\n\tfor (var speed of metroSpeeds) {\n\t\tif (speed.name == name)\n\t\t\treturn speed.acceleration;\n\t}\n\treturn 1.3;\n}\n\nfunction findFreq(name) {\n\tfor (var freq of metroFrequencies) {\n\t\tif (freq.name == name)\n\t\t\treturn freq.frequency;\n\t}\n\treturn 2*60;\n}\n\nfunction addNewLines(metroLinesFetched, limT){\n\n\tconst dockTime = 15; //time the trains is stopped at dock\n\n\tvar stopsLines = {};\n\t//console.log('metroLinesFetched', metroLinesFetched)\n\n\t_.each(metroLinesFetched, function(line){\n\t\tline.stops.forEach(function(stop, indexStop){\n\t\t\tif(indexStop === 0){\n\t\t\t\tstopsLines[line.lineName] = {\n\t\t\t\t\t'points' : [turf.point([stop.latlng[1], stop.latlng[0]])],\n\t\t\t\t\t'pos' : [stop.pos],\n\t\t\t\t\tspeed: findSpeed(line.speedName),\n\t\t\t\t\taccel: findAccel(line.speedName),\n\t\t\t\t\tfrequency: findFreq(line.frequencyName)\n\t\t\t\t};\n\t\t\t}else{\n\t\t\t\tstopsLines[line.lineName].points.push(turf.point([stop.latlng[1], stop.latlng[0]]));\n\t\t\t\tstopsLines[line.lineName].pos.push(stop.pos);\n\t\t\t}\n\t\t});\n\t});\n\n\t//console.log(stopsLines);\n\t/*\n\tmetro.find({temp:true}, {sort: {'timeCreation':1}}).forEach(function(stop){\n\t\tif(stop.line in stopsLines) {\n\t\t\tstopsLines[stop.line].points.push(stop.point);\n\t\t\tstopsLines[stop.line].pos.push(stop.pos);\n\t\t}else{\n\t\t\tstopsLines[stop.line] = {'points' : [stop.point], 'pos' : [stop.pos]};\n\t\t}\n\t});*/\n\t//console.log('addNEwLines', stopsLines);\n\t//connections.remove({'temp' : true});\n\tlet cArrayTemp = [];\n\n\t_.each(stopsLines, function(line, lineName){\n\t\t//console.log(lines);\n\t\tlet freqTime = line.frequency;\n\t\tlet speed = line.speed;\n\t\tlet accel = line.accel;\n\n\t\tif (!freqTime)\n\t\t\treturn; //knock out linea\n\n\t\tlet startingStopTime = 5*3600; //line starts at 5am\n\t\tlet endTime = 24*3600; //line ends at 12pm\n\n\t\tlet startStopPoint = line.points[0];\n\t\tlet startStopPos = line.pos[0];\n\t\t//console.log(startStopPoint);\n\n\t\t//** One direction\n\t\tfor(let stop_i = 1; stop_i < line.points.length; stop_i++){\n\t\t\tlet endStopPoint = line.points[stop_i];\n\t\t\tlet endStopPos = line.pos[stop_i];\n\t\t\t//console.log(startStopPoint, endStopPoint);\n\t\t\tlet dist =  turf.distance(startStopPoint, endStopPoint, 'kilometers') * 1000.0;\n\t\t\tlet timeDist = computeTfor2Stops(dist, speed, accel);\n\t\t\tlet endingTime = startingStopTime + timeDist;\n\t\t\tlet cArray2Add = [];\n\t\t\tfor(let StartingTimeTemp = startingStopTime; StartingTimeTemp + timeDist <= endTime; StartingTimeTemp += freqTime){\n\t\t\t\tif(StartingTimeTemp >=  limT[0] && StartingTimeTemp + timeDist <= limT[1]){\n\t\t\t\t\tcArray2Add.push(startStopPos, endStopPos, StartingTimeTemp , StartingTimeTemp + timeDist);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcArrayTemp = mergeSortedC(cArrayTemp, cArray2Add);\n\t\t\tstartingStopTime = endingTime + dockTime;\n\t\t\tstartStopPoint = line.points[stop_i];\n\t\t\tstartStopPos = line.pos[stop_i];\n\t\t}\n\t\t// *** Opposite direction\n\t\tstartingStopTime = 5*3600; //line starts at 5am\n\t\tendTime = 24*3600; //line ends at 12pm\n\t\tvar totStop = line.points.length-1;\n\t\tstartStopPoint = line.points[totStop];\n\t\tstartStopPos = line.pos[totStop];\n\t\tfor(let stop_i = totStop -1 ; stop_i >= 0; stop_i--){\n\t\t\tlet endStopPoint = line.points[stop_i];\n\t\t\tlet endStopPos = line.pos[stop_i];\n\t\t\tlet dist =  turf.distance(startStopPoint, endStopPoint, 'kilometers') * 1000.0;\n\t\t\tlet timeDist = computeTfor2Stops(dist, speed, accel);\n\t\t\tlet endingTime = startingStopTime + timeDist;\n\t\t\tlet cArray2Add = [];\n\t\t\tfor(let StartingTimeTemp = startingStopTime; StartingTimeTemp + timeDist <= endTime; StartingTimeTemp += freqTime){\n\t\t\t\tif(StartingTimeTemp >=  limT[0] && StartingTimeTemp + timeDist <= limT[1]){\n\t\t\t\t\tcArray2Add.push(startStopPos, endStopPos, StartingTimeTemp , StartingTimeTemp + timeDist);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcArrayTemp = mergeSortedC(cArrayTemp, cArray2Add);\n\t\t\tstartingStopTime = endingTime + dockTime;\n\t\t\tstartStopPoint = line.points[stop_i];\n\t\t\tstartStopPos = line.pos[stop_i];\n\t\t}\n\n\n\t});\n\t//console.log(cArrayTemp.length)\n\treturn cArrayTemp;\n\t//console.log(stopsLines);\n}\n\nexport {addNewLines};\n","import * as parameters from '/imports/parameters.js'\nimport math from 'mathjs';\n\nconst deleteEmptyItem = function(array2Add){\n\tfor(let key in array2Add){\n\t\tif(array2Add[key].pos.length == 0)\n\t\t\tdelete array2Add[key]; \n\t}\n};\n\nconst fill2AddArray = function(num){\n\tlet array2Add = {}\n\tfor(let i = 0; i < num; i++){\n\t\tarray2Add[i] = {\n        \t'pos' : [],\n            'time' : []\n        };\n\t}\n\treturn array2Add;\n};\n\nconst computeNeigh = function(stop, stops, P2S2Add, S2S2Add, points, serverOSRM){\n\treturn new Promise( function(resolve, reject ){\n\t\tlet serverUrl = serverOSRM;\n\t\tlet urlBase =  serverUrl+\"table/v1/foot/\" + stop.coor[0] + ',' + stop.coor[1] + ';';\n\t\tlet urlPoints = urlBase.slice(0);\n\t\tlet urlStops = urlBase.slice(0);\n\t\tlet posStop = stop.pos;\n\t\tlet MaxDistance = parameters.maxDistanceWalk;\n\t\tlet NearSphere = {\n\t\t\t\t\t\t\t$near: {\n\t\t\t\t\t\t    $geometry: {'type': 'Point', 'coordinates' : stop.coor},\n\t\t\t\t\t\t    $maxDistance: MaxDistance\n\t\t\t\t\t\t  \t},\n\t\t\t\t\t\t};\n\n\t\tlet stopsNList = [];\n\t\tlet stopsFind = stops.find({'point':NearSphere}, {fields:{'point':1, 'pos':1}, sort:{'pos':1}});\n\t\t\n\t\tstopsFind.forEach(function(stopN){\n\t      \tstopsNList.push(stopN);\n\t       \turlStops += stopN.point.coordinates[0] + ',' + stopN.point.coordinates[1] + ';';\n\t    });\n\n\t  \tlet pointsNList = [];\n\t\tlet pointsFind = points.find({'point':NearSphere}, {fields:{'point':1, 'pos':1}, sort:{'pos':1}});\n\n\t\tpointsFind\n\t\t\t.forEach(function(pointN){\n\t          \tpointsNList.push(pointN);\n\t          \turlPoints += pointN.point.coordinates[0] + ',' + pointN.point.coordinates[1] + ';';\n\t    });\n\n\t    urlStops = urlStops.slice(0,-1) + '?sources=0';\n\t    urlPoints = urlPoints.slice(0,-1) + '?sources=0';\n\t    //console.log(\"number of neigs\", stop, pointsNList.length, stopsNList.length, MaxDistance);\n      \tvar getPoints = function() {\n\t        if (pointsNList.length < 1) {\n\t          resolve([stop,pointsNList,stopsNList]);\n\t          return;\n\t        }\n\n\t        HTTP.get(urlPoints, function (error2, result2){\n\t  \t\t\t\tif(error2) {\n\t  \t\t\t\t\tconsole.log('error HTTP call Point', serverUrl, error);\n\t  \t\t\t\t\treject('error http request');\n\t  \t\t\t\t}else{\n\n\t  \t\t\t\t\tlet resultPoints = result2.data;\n\t  \t\t\t\t   \tif('durations' in resultPoints){\n\t  \t\t\t\t\t\tfor(let i = 1; i < resultPoints.durations[0].length; i++){\n\t  \t\t\t\t\t\t\tlet time = math.round(resultPoints.durations[0][i]);\n\t  \t\t\t\t\t\t\tpointsNList[i-1].time = time;\n\t  \t\t\t\t\t\t}\n\t  \t\t\t\t\t}\n\t  \t\t\t\t\tlet countPointAdded = 0;\n\t  \t\t\t\t\tfor(let pointN_i = 0; pointN_i < pointsNList.length; pointN_i++){\n\t  \t\t\t\t\t\tif(pointsNList[pointN_i].time < parameters.maxTimeWalk){\n\t\t\t\t                let posPointN = pointsNList[pointN_i].pos\n\t\t\t\t                let timePointN = pointsNList[pointN_i].time;\n\t\t\t                  \tP2S2Add[posPointN].pos.push(stop.pos)\n\t\t\t                  \tP2S2Add[posPointN].time.push(timePointN)\n\t                  \t\t\tcountPointAdded+=1;\n\t  \t\t\t\t\t\t}\n\t  \t\t\t\t\t}\n\t  \t\t\t\t}\n\t  \t\t\t\tconsole.log(\"called resolved point\", serverUrl, urlPoints)\n\t  \t\t\t\tresolve([stop,pointsNList,stopsNList]);\n\t        });\n\t    };\n\n\t\tif (stopsNList.length < 1) {\n\t\tgetPoints();\n\t\treturn;\n\t\t}\n\n\t    HTTP.get(urlStops, function (error, result){\n\t    \tif(error) {\n\t    \t\t\tconsole.log('error HTTP call Stop', serverUrl, error);\n\t\t\t\t\treject('error http request');\n  \t\t\t}else{\n  \t\t    \tlet resultStops = result.data;\n  \t\t\t\tif('durations' in resultStops){\n  \t\t\t\t\tfor(let i = 1; i < resultStops.durations[0].length; i++){\n  \t\t\t\t\t\tlet time = resultStops.durations[0][i];\n  \t\t\t\t\t\tstopsNList[i-1].time = time;\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t\tfor(let stopN_i = 0; stopN_i < stopsNList.length; stopN_i++){\n  \t\t\t\t\tlet posStopN = stopsNList[stopN_i].pos\n\t\t            let timeStopN = stopsNList[stopN_i].time;\n  \t\t\t\t\tif(stopsNList[stopN_i].time < parameters.maxTimeWalk && posStop != posStopN){\n\t\t              //console.log(posStopN, posStop)\n\t\t            \tS2S2Add[posStop].pos.push(posStopN)\n\t\t            \tS2S2Add[posStop].time.push(timeStopN)\n\t\t            \tif(S2S2Add[posStopN].pos.includes(posStop)){\n\t\t            \t\t//console.log('ce sta!!!!')\n\t\t            \t\tlet posTemp = S2S2Add[posStopN].pos.indexOf(posStop)\n\t\t            \t\tif(S2S2Add[posStopN].time[posTemp] > timeStopN){\n\t\t            \t\t\tS2S2Add[posStopN].time[posTemp] = timeStopN\n\t\t            \t\t}\n\t\t            \t}else{\n\t\t            \t\tS2S2Add[posStopN].pos.push(stop.pos)\n\t\t            \t\tS2S2Add[posStopN].time.push(timeStopN)\n\n\t\t            \t}\n            \t\t}\n\n  \t\t\t\t}\n  \t\t\tconsole.log(\"called resolved stop\", serverUrl)\n  \t\t\t}\n    \tgetPoints();\n\t\t});\n\t});\n}\n\n\nconst updateArrays = function(city, stopsCollection, pointsCollections, scenario, serverOSRM){\n\t//make copy of default arrays\n\n\tstopsCollection.remove({temp:true});\n\t\n\tlet metroLinesFetched = scenario.lines;\n\n\t//console.log(metroLinesFetched)\n\n\tmetroLinesFetched.forEach(function(line, indexLine){\n\t\tline.stops.forEach(function(stop, indexStop){\n \t\t\tlet posStop = _.size(scenario.S2S2Add);\n \t\t\t//console.log(posStop, line, stop)\n\t\t\tmetroLinesFetched[indexLine].stops[indexStop].pos = posStop;\n\t\t\tstopsCollection.insert({\n\t\t\t\t'line' : line.lineName,\n\t\t\t\t'pos' : posStop,\n\t\t\t\t'latlng' : stop.latlng,\n\t\t\t\t'coor' : [stop.latlng[1], stop.latlng[0]],\n\t\t\t\t'timeCreation' : new Date().getTime(),\n\t\t\t\t'point' : {'type' : 'Point', 'coordinates' : [stop.latlng[1], stop.latlng[0]]},\n\t\t\t\t'temp' : true,\n\t\t\t\t'city' : city,\n\t\t\t});\n\t\t\tscenario.S2S2Add[posStop] = {\n\t        \t'pos' : [],\n\t            'time' : []\n        \t};\n\t\t});\n\t});\n\n\tlet newStops = stopsCollection.find({temp:true}, {sort : {'timeCreation':1} });\n\n\tlet promiseAddStop = [];\n\n \tif(newStops.count()){\n\t \tnewStops.forEach(function(stop) {\n\t \t\tpromiseAddStop.push(computeNeigh(stop,stopsCollection, scenario.P2S2Add, scenario.S2S2Add, pointsCollections, serverOSRM));\n\t \t});\n\t}\n\n \treturn promiseAddStop;\n\n};\n\nexport const updateArraysWait = function(city, stopsCollection, pointsCollections, scenario, serverOSRM){\n\tpromiseAddStop = updateArrays(city, stopsCollection, pointsCollections, scenario, serverOSRM);\n\tPromise.all(promiseAddStop).then(values => {return values});\n}\n\nexport {updateArrays, fill2AddArray, deleteEmptyItem}\n","const mergeSortedC = function(left, right){\n    var result  = [],\n        il      = 0,\n        ir      = 0;\n\n    while (il < left.length && ir < right.length){\n        if (left[il+2] < right[ir+2]){\n            result.push(left[il],left[il+1],left[il+2],left[il+3]);\n            il+=4;\n        } else {\n            result.push(right[ir],right[ir+1],right[ir+2],right[ir+3]);\n            ir+=4;\n        }\n    }\n\n    return result.concat(left.slice(il)).concat(right.slice(ir));\n};\n\nconst copyArrayN = function(obj){\n    if (!obj || !obj.pos || !obj.time )\n      return {pos: [], time: []};\n    let pos = obj.pos.map(function(arr) { return arr ? arr.slice() : [];});\n    let time = obj.time.map(function(arr) { return arr ? arr.slice() : [];});\n    return {'pos':pos, 'time':time};\n};\n\n\nexport {mergeSortedC, copyArrayN};\n","import fs from \"fs\";\nimport JSZip from \"jszip\";\nimport { scenarioDB} from '/imports/DBs/scenarioDB.js';\nimport { computeScenario } from '/imports/server/startup/scenarioDef.js'\n\n//let path = process.env['METEOR_SHELL_DIR'] + '/../../../public/cities/';\n//let path = Assets.absoluteFilePath('cities/')\nvar meteorRoot = fs.realpathSync( process.cwd() + '/../' );\nvar publicPath = meteorRoot + '/web.browser/app/';\nlet path = publicPath + '/cities/';\n\nexport let citiesData = {};\nexport let listCities = [];\n\n\nexport let addDataFromZip = function(nameFile){\n\tconsole.log(\"reading\", nameFile, Meteor.settings.public)\n\n\tfs.readFile(nameFile, function(err, data) {\n\t    if (err) throw err;\n\t    JSZip.loadAsync(data).then(function (zip) {\n\t    \tzip.file(\"cityData.txt\").async(\"string\").then(function (data2){\n\t    \t\tlet cityData = JSON.parse(data2)\n\t    \t\tlet city = cityData['city']\n\t    \t\tcitiesData[city] = {}\n\t\t\t\tcitiesData[city]['city'] = city\n\t\t\t\tcitiesData[city]['nameFile'] = nameFile.split(\"/\").pop();\n\t\t\t\tcitiesData[city]['oneHex'] = cityData['hex'];\n\t\t\t\tcitiesData[city]['areaHex'] = cityData['areaHex'];\n\t\t\t\tcitiesData[city]['newScenario'] = cityData['newScenario'];\n\t\t\t\tcitiesData[city]['budget'] = cityData['budget'];\n\t\t\t\tcitiesData[city]['metroLines'] = cityData['metroLines'];\n\t\t\t\tcitiesData[city]['serverOSRM'] = Meteor.settings.public.OSRM_SERVER || cityData['serverOSRM'] + \"/\" ;\n\t\t\t\tconsole.log(citiesData[city]['serverOSRM'])\n\t\t\t\tcitiesData[city]['centerCity'] = cityData['centerCity'];\n\t\t\t\tcitiesData[city]['arrayN'] = {};\n\t\t\t\tcitiesData[city]['arrayPop'] = [];\n\t    \t\t//console.log(citiesData[city], nameFile, nameFile.split(\"/\").pop())\n\n\t        \tzip.file(\"connections.txt\").async(\"string\").then(function (data3){\n\t        \t\tconsole.log(city, 'parsing, arrayC')\n\t\t        \tcitiesData[city]['arrayC'] = JSON.parse(data3);//data3.split(\",\").map(Number); //JSON.parse(data3);\n\t\t        \tconsole.log(city, 'arrayC')\n\t\t\t        zip.file(\"listPoints.txt\").async(\"string\").then(function (data3){\n\t\t\t        \tcitiesData[city]['listPoints'] = JSON.parse(data3);\n\t\t\t        \tcitiesData[city]['listPoints'].forEach((p)=>{\n\t\t\t        \t\tcitiesData[city]['arrayPop'].push(p.pop)\n\t\t\t        \t})\n\t\t\t        \tzip.file(\"listStops.txt\").async(\"string\").then(function (data3){\n\t\t\t\t        \tcitiesData[city]['stops'] = JSON.parse(data3);\n\t        \t\t        zip.file(\"P2PPos.txt\").async(\"string\").then(function (data3){\n\t\t\t\t\t        \tcitiesData[city]['arrayN']['P2PPos'] = JSON.parse(data3);\n\t\t\t\t\t        \tzip.file(\"P2PTime.txt\").async(\"string\").then(function (data3){\n\t\t\t\t\t        \t\tcitiesData[city]['arrayN']['P2PTime'] = JSON.parse(data3);\n\t\t\t\t\t        \t\tzip.file(\"P2SPos.txt\").async(\"string\").then(function (data3){\n\t\t\t\t\t        \t\t\tcitiesData[city]['arrayN']['P2SPos'] = JSON.parse(data3);\n\t\t\t\t\t        \t\t    zip.file(\"P2STime.txt\").async(\"string\").then(function (data3){\n\t\t\t\t\t        \t\t\t\tcitiesData[city]['arrayN']['P2STime'] = JSON.parse(data3);\n\t\t\t\t\t        \t\t\t\tzip.file(\"S2SPos.txt\").async(\"string\").then(function (data3){\n\t\t\t\t\t        \t\t\t\t\tcitiesData[city]['arrayN']['S2SPos'] = JSON.parse(data3);\n\t\t\t\t\t        \t\t\t\t\tzip.file(\"S2STime.txt\").async(\"string\").then(function (data3){\n\t\t\t\t\t        \t\t\t\t\t\tcitiesData[city]['arrayN']['S2STime'] = JSON.parse(data3);\n\t\t\t\t\t\t\t\t\t\t\t      \tlet latlng = citiesData[city]['centerCity'];\n\t\t\t\t\t\t\t\t\t\t\t      \tlet newScenario = citiesData[city]['newScenario']\n\t\t\t\t\t\t\t\t\t\t\t        listCities.push({'city':city, 'latlng': latlng.reverse(), 'newScenario':newScenario});\n\t\t\t\t\t\t\t\t\t\t\t        console.log('readed', nameFile)\n\t\t\t\t\t\t\t\t\t\t        \t//console.log(\"loaded\", city+\".zip\", 'scenario def',scenarioDB.find({'city':city, 'default':true}).count(), ' newScenario', newScenario, citiesData[city]['centerCity'])\n\t\t\t\t\t\t\t\t\t\t        \tif(scenarioDB.find({'city':city, 'default':true}).count()==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//computeScenario(city, citiesData[city]);\n\t\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t\t        \t\tconsole.log(\"computeScenario\", city)\n\t\t\t\t\t\t\t\t\t\t        \t}\n\t\t\t\t        \t\t\t\t\t\t});\n        \t\t\t\t\t\t\t\t\t});\n        \t\t\t\t\t\t\t\t});\n\t        \t\t\t\t\t\t});\n\t        \t\t\t\t\t});\n\t        \t\t        });\n\t\t\t        \t});\n\t        \t\t});\n\t    \t\t});\n\t\t\t});\n\t    });\n\t});\n};\n\nexport let loadCity = function(){\n\t\n\tfs.readdirSync(path).forEach(nameFile => {\n\t  //console.log(file.slice(-3));\n\t\t if(nameFile.slice(-3) ==\"zip\"){\n\t\t  //console.log(file.slice(0,-4))\n\t\t  addDataFromZip(path + nameFile);\n\t\t}\n\t});\n\n}","import { Meteor } from 'meteor/meteor';\nimport JSZip from 'jszip';\nimport fs from 'fs';\nimport turf from 'turf';\nimport math from 'mathjs';\nimport { EJSON } from 'meteor/ejson';\n\nimport { scenarioDB, initScenario, computeScoreNewScenario } from '/imports/DBs/scenarioDB.js';\n\nimport { timesOfDay, maxDuration } from '/imports/parameters.js'\n\nimport {loadCity, citiesData} from '/imports/server/startup/loadCitiesData.js';\n\nprocess.on('unhandledRejection', console.log.bind(console))\n\nvar worker = require(\"/public/workers/ICSACore.js\");\n\nvar avgEmAll = function (arrays) {\n\tresult = []\n\tfor(var i = 0; i < arrays[0].length; i++){\n\t  var num = 0;\n\t  //still assuming all arrays have the same amount of numbers\n\t  for(var i2 = 0; i2 < arrays.length; i2++){ \n\t    num += arrays[i2][i];\n\t  }\n\t  result.push( num / arrays.length);\n\t}\n\n  return result\n}\n\n\n\nexport const cutArrayC = function(startTime, arrayC){\n\tlet endTime = startTime + 4*3600.;\n\tlet indexEnd = 0;\n\tlet indexStart = 0;\n\tfor(indexEnd = 2; indexEnd < arrayC.length; indexEnd+=4){\n\t\t\tif(parseInt(arrayC[indexEnd]) > endTime){\n\t\t\t\tbreak;\n\t\t\t\t//console.log(\"break!!!\")\n\t\t\t}\n\t}\n\tfor(indexStart = 2; indexStart < arrayC.length; indexStart+=4){\n\t\t\tif(parseInt(arrayC[indexStart]) >= startTime){\n\t\t\t\tbreak;\n\t\t\t\t//console.log(\"break!!!\")\n\t\t\t}\n\t}\n\n\tarrayCCut = _.slice(arrayC, indexStart - 2, indexEnd+2);\n\tconsole.log(\"cutted array!!\",startTime,  indexStart, indexEnd, arrayC.length, arrayCCut.length)\n\treturn arrayCCut;\n};  \n\nexport const computeScenario = function(city, dataCity,startTimes = timesOfDay){\n\tMeteor.setTimeout(()=>{\n\t\tlet listPoints = dataCity.listPoints;\n\t\tlet arrayN = dataCity.arrayN;\n\n\t \tlet areaHex = dataCity.areaHex;\n\t \tlet stopsList = dataCity.stopsList;\n\t \tlet arrayPop = dataCity.arrayPop;\n\n\t\tlet results = [];\n\t\tlet scenario = initScenario(city, 'default', 'citychrone', startTimes);\n\t\tscenario.default = true;\n\t\t\n\t \t//console.log(arrayN)\n\t \tlet perLim = 25;\n\t \tfor(let time_i in startTimes){\n\t \t\tlet percentage = 0\n\t \t\tlet velocityScore = [];\n\t \t\tlet socialityScore = [];\n\t\t\tlet startTime = startTimes[time_i];\n\t\t\tlet arrayC = cutArrayC(startTime, dataCity.arrayC);\n\t\t\tfor (var point_i = 0; point_i < listPoints.length; point_i++) {\n\t\t\t\tvar point = listPoints[point_i];\n\t\t\t\tvar returned = worker.ICSAPoint(point, arrayC, arrayN, startTime, areaHex, arrayPop);\n\t\t\t\t//console.log(point.pos , listPoints.length ,percentage);\n\t\t\t\tif(100. * point.pos / listPoints.length > percentage){ \n\t\t\t\t\tconsole.log(city, startTime/3600, returned.velocityScore, returned.socialityScore, (parseInt(100. * point.pos / listPoints.length)).toString() + \"%\" )\n\t\t\t\t\tpercentage += perLim\n\t\t\t\t}\n\t\t\t\tvelocityScore.push(returned.velocityScore);\n\t\t\t\tsocialityScore.push(returned.socialityScore);\n\t\t\t}\n\n\n\t\t\tscenario.moments[startTime.toString()] = scenario.moments[startTime.toString()] || {};\n\n\t\t\tlet moment = scenario.moments[startTime.toString()]\n\t\t\tmoment.velocityScore = velocityScore;\n\t\t\tmoment.socialityScore = socialityScore;\n\n\t\t}\n\t \n\t \n\t\tlet velocities = [];\n\t\tlet socialities = [];\n\t\tfor(let time in scenario.moments){\n\t\t\tconsole.log(time)\n\t\t\tif(scenario.moments[time]['velocityScore'].length > 0 ){\n\t\t\t\tvelocities.push(scenario.moments[time]['velocityScore']);\n\t\t\t\tsocialities.push(scenario.moments[time]['socialityScore']);\n\t\t\t}\n\t\t}\n\n\t\tconsole.log(velocities.length, \"after\" , Object.keys(scenario.moments))\n\t\tscenario.moments[\"avg\"] = {};\n\t\tscenario.moments[\"avg\"].velocityScore = avgEmAll(velocities);\n\t\tscenario.moments[\"avg\"].socialityScore = avgEmAll(socialities);\n\n\t\t//console.log(velocities)\n\n\t\tscenarioDB.remove({'city':city, 'default':true});\n\t\tscenario['arrayPop'] = arrayPop;\n\t\tscenario['scores'] = computeScoreNewScenario(scenario, startTimes[0].toString());\n\n\t\tscenarioDB.insert(scenario);\n\t\t\n\t\t//return scenario;\n\t}, 0);\n \n} \n\nexport const computeScenarioDefault = function(city){\n\tlet dataCity = citiesData[city];\n\tlet scenario = computeScenario(city, dataCity);\n\treturn scenario;\n\n} \n\n\nexport const addCityToList = function(scenarioDef, dataCity) {\nreturn new Promise( function(resolve, reject ){\n\t\tconsole.log(\"inside PROMISE\");\n\t\tlet city = scenarioDef.city\n\t\tcitiesData[city] = dataCity;\n\t});\n}\n\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { addNewLines } from '/imports/lib/newScenarioLib/addNewLines.js';\n//import {initArrayC} from '/imports/server/startup/InitArrayConnections.js';\nimport { scenarioDB } from '/imports/DBs/scenarioDB.js';\nimport { citiesData,  listCities} from '/imports/server/startup/loadCitiesData.js';\nimport { maxDuration\n} from '/imports/parameters.js';\nimport '/imports/lib/newScenarioLib/addNewStops.js';\n  \nlet worker = require(\"/public/workers/ICSACore.js\");\nlet mergeArrays = require(\"/public/workers/mergeArrays.js\");\n\nMeteor.methods({\n  'isochrone'(point, scenarioID, startTime){\n      var scenario = scenarioDB.findOne({'_id':scenarioID});\n      let city = scenario.city;\n      if(scenario == [] || !(city in citiesData) ){ \n        //console.log('Scenario not found')\n        return [];\n      } else {\n        let cityData = citiesData[city];\n        let listPoints = cityData.listPoints;\n        let wTime = [startTime , startTime + maxDuration];\n        let arrayC2Add = addNewLines(scenario.lines, wTime) || [];\n        let arrayC = mergeArrays.mergeSortedC(cityData.arrayC, arrayC2Add);\n\n        let arrayN = {};\n        let arrayNDef = cityData.arrayN;\n\n        arrayN['P2SPos'] = mergeArrays.mergeArrayN(arrayNDef.P2SPos, scenario.P2S2Add, 'pos');\n        arrayN['P2STime'] = mergeArrays.mergeArrayN(arrayNDef.P2STime, scenario.P2S2Add, 'time');\n        arrayN['S2SPos'] = mergeArrays.mergeArrayN(arrayNDef.S2SPos, scenario.S2S2Add, 'pos');\n        arrayN['S2STime'] = mergeArrays.mergeArrayN(arrayNDef.S2STime, scenario.S2S2Add, 'time');\n        arrayN['P2PPos'] = arrayNDef.P2PPos.slice();\n        arrayN['P2PTime'] = arrayNDef.P2PTime.slice();\n\n        let pointsVenues = cityData.pointsVenues;\n        let areaHex = cityData.areaHex;\n        let arrayPop = cityData.arrayPop;\n        //console.log('arrayC, arrayN', arrayC.length, Object.keys(arrayN))\n        //let startTime = timesOfDay[time_i];\n        let returned = worker.ICSAPoint(point, arrayC, arrayN, startTime, areaHex, pointsVenues, arrayPop);\n\n\n      return returned.tPoint;\n    }\n  },\n    'giveDataBuildScenario' : function(city,data){\n    let dataToReturn = {}\n    data.forEach( (name)=>{\n      if(citiesData[city][name] != undefined){\n        dataToReturn[name] = citiesData[city][name];}\n      else{\n        dataToReturn[name] = [];\n      }\n    });\n    //console.log(city, data)\n\n    return dataToReturn;\n  },\n  'giveListCitiesScenario' : function(){\n    return listCities;\n  }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Router } from 'meteor/iron:router';\n\n//import { initVel } from '/imports/DBs/velocityDb.js';\nimport {timesOfDay, maxDuration} from '/imports/parameters.js';\nimport JSZip from 'jszip';\nimport fs from 'fs';\n\nimport { computeScenarioDefault, addCityToList, checkCities, computeDataCity, computeOnlyScenarioDefault } from '/imports/server/startup/scenarioDef.js';\nimport { scenarioDB, initScenario } from '/imports/DBs/scenarioDB.js';\nimport {loadCity, citiesData} from '/imports/server/startup/loadCitiesData.js';\n\n\nRouter.route('/addCity/:city', function () {\n\tlet city = this.params.city\n\tconsole.log('Adding ... ', city);\n \tthis.response.end('Adding ... ' + city);\n\tlet scenarioDef = computeScenarioDefault(city);\n}, {where: 'server'});\n \n \nRouter.route('/reloadCities', function () {\n  loadCity();\n}, {where: 'server'});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { Template } from 'meteor/templating';\n\nexport const scenarioDB = new Mongo.Collection('scenario');\n\nif(Meteor.isServer){\n\tscenarioDB._ensureIndex({ \"scores.scoreVelocity\": -1, \"creationDate\":-1});\n\tscenarioDB._ensureIndex({ \"city\":1, \"scores.avgVelocityScore\": 1, \"creationDate\":-1});\n\tscenarioDB._ensureIndex({ \"city\":1});\n\tscenarioDB._ensureIndex({ \"city\":1, \"scores.avgSocialityScore\": 1});\n\n}\nexport const initScenario = function(city, name, author, times, metroLinesFetched, P2S2Add, S2S2Add){\n\tmetroLinesFetched = metroLinesFetched || [];\n\tP2S2Add = P2S2Add || {};\n\tS2S2Add = S2S2Add || {};\n\tlet moments = { }\n\ttimes.forEach((time)=>{\n\t\tmoments[time] = {\n\t\t\t'velocity' : 0,\n\t\t\t'score' : 0,\n\t\t\t'budget' : 0,\n\t\t\t'efficency' : 0,\n\t\t\t'velocityScore' : [],\n\t\t\t'socialityScore' : [],\n\t\t\t'velocityScoreDiff' : [],\n\t\t\t'socialityScoreDiff' : [],\n\n\t\t}\n\t})\n\tlet scenario = {\n\t\t'author' : author,\n\t\t'name' : name,\n\t\t'creationDate'  : new Date(),\n\t\t'lines' : metroLinesFetched,\n\t\t'P2S2Add' : P2S2Add,\n\t\t'S2S2Add': S2S2Add,\n\t\t'city' : city,\n\t\t'_id' : new Mongo.ObjectID(),\n\t\t'moments' : moments,\n\t\t'default' : false,\n\t\t'author' : author\n\t};\n\treturn scenario;\n}; \n\nexport const computeScoreNewScenario = function(scenario, time){\n\tlet scores = {};\n\tlet moment = scenario['moments'][time];\n\tlet popArray = scenario['arrayPop'];\n\tlet totPop = scenario.arrayPop.reduce((a, b)=>{ return a + b; }, 0);\n\tscores['avgVelocityScore'] = 0;\n\tmoment['velocityScore'].forEach((vel, i)=>{\n\t\tscores['avgVelocityScore'] += popArray[i] * vel\n\t});\n\tscores['avgVelocityScore'] /= totPop;\n\t\n\tscores['avgSocialityScore'] = 0;\n\tmoment['socialityScore'].forEach((soc, i)=>{\n\t\tscores['avgSocialityScore'] += popArray[i] * soc\n\t});\n\tscores['avgSocialityScore'] /= totPop;\n\n\treturn scores;\n\n};\n\nMeteor.methods({\n\t'insertNewScenario' : function(obj){\n\t\t//console.log('insert scenario', obj);\n\t\tif('_id' in obj){\n\t\t\t\t\tconsole.log('updating scenario', obj.city);\n\n\t\t\tscenarioDB.update({'_id':obj['_id']}, obj,{'upsert':true}, function(err, id) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t//console.log('insert scenario new id', id);\n\t\t\t\t\t//if (Meteor.isClient)\n\t\t\t\t\t\t//Template.body.template.scenario.currentScenarioId = id;\n\t\t\t});\n\t\t}else{\n\t\t\tscenarioDB.insert(obj, function(err, id) {\n\t\t\t\tif (err) {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t//console.log('insert scenario new id', id);\n\t\t\t\t\t//if (Meteor.isClient)\n\t\t\t\t\t\t//Template.body.template.scenario.currentScenarioId = id;\n\t\t\t});\n\n\t\t}\n\t},\n\t'updateScenario' : function(obj, _id){\n\t\t//console.log(\"update scenario\", _id);\n\t\tscenarioDB.update({'_id':_id}, obj);\n\t},\n\t'updateNameAuthorScenario' : function(title, author, _id){\n\t\tlet res = scenarioDB.update({'_id':_id}, {\"$set\":{'name':title, 'author':author}},\n\t\t\t(err, numModified)=>{\n\t\t\t\t//console.log(\"scenario updated\", title, author, _id, numModified, err);\n\t\t\t});\n\t\t//console.log(\"scenario updated\", title, author, _id, res);\n\t},\n\t 'scenarioDef' : function(city){\n\t \tlet res = scenarioDB.findOne({'default':true, 'city' : city}, {sort:{'creationDate':-1}, reactive: false} );\n\t \t//console.log('return scenario def', res);\n    \treturn res\n  },\n  'giveScenario': function(_id){\n  \t//console.log(_id, scenarioDB.findOne({'_id':new Mongo.ObjectID(_id)}))\n  \treturn scenarioDB.findOne({'_id':new Mongo.ObjectID(_id)});\n  },\n  'findOne':function(search){\n  \treturn scenarioDB.findOne(search);\n  }\n\n});\n","import turf from 'turf';\nimport math from 'mathjs';\nimport {\n\tRouter\n} from 'meteor/iron:router';\n\nexport const maxTimeWalk = 900.; //[second] Max distance allowed for walking path between stops and points.\nexport const walkingVelocity = 5./3.6; // [meter/second].\nexport const maxDistanceWalk = maxTimeWalk * walkingVelocity; //Max distance allowed for walking path between stops and points.\nexport const timesOfDay = [7. * 3600., 10 * 3600, 13 * 3600, 16 * 3600, 19 * 3600, 22 * 3600];\nexport const maxDuration = 4 * 3600; //max integration intervals, limit the lenght of array of connections.\n\n//export const zeroTime = 3.0 * 60; //first 3 min are not consider in the average velocity\n//export const integralWindTime = Math.log(maxDuration - zeroTime) - Math.log(zeroTime);\n\nexport const metroSpeeds = [\n\t{\n\t\tname: \"Low\",\n\t\ttopSpeed: 12,\n\t\tacceleration: 0.6,\n\t\tcolorClass: 'btn-danger'\n\t},\n\t{\n\t\tname: \"Med\",\n\t\ttopSpeed: 20,\n\t\tacceleration: 0.9,\n\t\tcolorClass: 'btn-warning'\n\t},\n\t{\n\t\tname: \"High\",\n\t\ttopSpeed: 30,\n\t\tacceleration: 1.3,\n\t\tcolorClass: 'btn-success'\n\t}\n];\n\nexport const metroFrequencies = [\n\t{\n\t\tname: \"Off\",\n\t\tfrequency: 0,\n\t\tcolorClass: 'btn-default'\n\t},\n\t{\n\t\tname: \"Low\",\n\t\tfrequency: 15*60,\n\t\tcolorClass: 'btn-danger'\n\t},\n\t{\n\t\tname: \"Med\",\n\t\tfrequency: 8*60,\n\t\tcolorClass: 'btn-warning'\n\t},\n\t{\n\t\tname: \"High\",\n\t\tfrequency: 2*60,\n\t\tcolorClass: 'btn-success'\n\t},\n];\n","import { Meteor } from 'meteor/meteor';\nimport { Router } from 'meteor/iron:router';\n\nimport { scenarioDB } from '/imports/DBs/scenarioDB.js';\nimport '/imports/server/methods.js';\nimport JSZip from 'jszip';\nimport fs from 'fs';\n\n//import { initArrayC} from '/imports/server/startup/InitArrayConnections.js';\n//import { initNeighStopAndPoint } from '/imports/server/startup/neighStopsPoints.js';\n\n//import { checkCities } from '/imports/server/startup/scenarioDef.js';\nimport '/imports/server/router.js';\nimport {loadCity} from '/imports/server/startup/loadCitiesData.js';\n\nvar _;\n \n\nMeteor.startup(() => {\n  _ = lodash;\n  loadCity()\n\n\n  Meteor.publish('scenario', function scenarioList(city) {\n    let sort = {'scores.avgVelocityScore':-1, 'creationDate':-1};\n    let field = {'moments':0, 'P2S2Add': 0, 'S2S2Add':0, 'lines':0};\n    console.log(sort, field);\n    return scenarioDB.find({'city':city}, {sort:sort, 'fields':field});\n  });\n\n  Meteor.publish('scenarioDef', function scenarioList(city, listOfId) {\n    return scenarioDB.find({'default':true, 'city' : city}, {sort:{'creationDate':-1}});\n  });\n\n  Meteor.publish('scenarioID', function scenarioList(city, _id) {\n    return scenarioDB.find({'_id':_id, 'city' : city, 'moments':{'$exists':true}}, {sort:{'creationDate':-1}});\n  });\n\n  //console.log('finish publish!!');\n\n  return true;\n});\n\n"]}